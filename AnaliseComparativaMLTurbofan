{"cells":[{"cell_type":"code","source":["!python3 --version\n","!pip3 list"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O1tQtWgfh97S","executionInfo":{"status":"ok","timestamp":1671503344192,"user_tz":180,"elapsed":640,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}},"outputId":"5da9b2c4-8ca7-4825-c661-b1971fa58838"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Python 3.8.16\n","Package                       Version\n","----------------------------- ----------------------\n","absl-py                       1.3.0\n","aeppl                         0.0.33\n","aesara                        2.7.9\n","aiohttp                       3.8.3\n","aiosignal                     1.3.1\n","alabaster                     0.7.12\n","albumentations                1.2.1\n","altair                        4.2.0\n","appdirs                       1.4.4\n","arviz                         0.12.1\n","astor                         0.8.1\n","astropy                       4.3.1\n","astunparse                    1.6.3\n","async-timeout                 4.0.2\n","atari-py                      0.2.9\n","atomicwrites                  1.4.1\n","attrs                         22.1.0\n","audioread                     3.0.0\n","autograd                      1.5\n","Babel                         2.11.0\n","backcall                      0.2.0\n","beautifulsoup4                4.6.3\n","bleach                        5.0.1\n","blis                          0.7.9\n","bokeh                         2.3.3\n","branca                        0.6.0\n","bs4                           0.0.1\n","CacheControl                  0.12.11\n","cachetools                    5.2.0\n","catalogue                     2.0.8\n","certifi                       2022.12.7\n","cffi                          1.15.1\n","cftime                        1.6.2\n","chardet                       3.0.4\n","charset-normalizer            2.1.1\n","click                         7.1.2\n","clikit                        0.6.2\n","cloudpickle                   1.5.0\n","cmake                         3.22.6\n","cmdstanpy                     1.0.8\n","colorcet                      3.0.1\n","colorlover                    0.3.0\n","community                     1.0.0b1\n","confection                    0.0.3\n","cons                          0.4.5\n","contextlib2                   0.5.5\n","convertdate                   2.4.0\n","crashtest                     0.3.1\n","crcmod                        1.7\n","cufflinks                     0.17.3\n","cvxopt                        1.3.0\n","cvxpy                         1.2.2\n","cycler                        0.11.0\n","cymem                         2.0.7\n","Cython                        0.29.32\n","daft                          0.0.4\n","dask                          2022.2.1\n","datascience                   0.17.5\n","db-dtypes                     1.0.5\n","debugpy                       1.0.0\n","decorator                     4.4.2\n","defusedxml                    0.7.1\n","descartes                     1.1.0\n","dill                          0.3.6\n","distributed                   2022.2.1\n","dlib                          19.24.0\n","dm-tree                       0.1.7\n","dnspython                     2.2.1\n","docutils                      0.17.1\n","dopamine-rl                   1.0.5\n","earthengine-api               0.1.335\n","easydict                      1.10\n","ecos                          2.0.10\n","editdistance                  0.5.3\n","en-core-web-sm                3.4.1\n","entrypoints                   0.4\n","ephem                         4.1.3\n","et-xmlfile                    1.1.0\n","etils                         0.9.0\n","etuples                       0.3.8\n","fa2                           0.3.5\n","fastai                        2.7.10\n","fastcore                      1.5.27\n","fastdownload                  0.0.7\n","fastdtw                       0.3.4\n","fastjsonschema                2.16.2\n","fastprogress                  1.0.3\n","fastrlock                     0.8.1\n","feather-format                0.4.1\n","filelock                      3.8.2\n","firebase-admin                5.3.0\n","fix-yahoo-finance             0.0.22\n","Flask                         1.1.4\n","flatbuffers                   1.12\n","folium                        0.12.1.post1\n","frozenlist                    1.3.3\n","fsspec                        2022.11.0\n","future                        0.16.0\n","gast                          0.4.0\n","GDAL                          2.2.2\n","gdown                         4.4.0\n","gensim                        3.6.0\n","geographiclib                 1.52\n","geopy                         1.17.0\n","gin-config                    0.5.0\n","glob2                         0.7\n","google                        2.0.3\n","google-api-core               2.8.2\n","google-api-python-client      1.12.11\n","google-auth                   2.15.0\n","google-auth-httplib2          0.0.4\n","google-auth-oauthlib          0.4.6\n","google-cloud-bigquery         3.3.6\n","google-cloud-bigquery-storage 2.16.2\n","google-cloud-core             2.3.2\n","google-cloud-datastore        2.9.0\n","google-cloud-firestore        2.7.2\n","google-cloud-language         2.6.1\n","google-cloud-storage          2.5.0\n","google-cloud-translate        3.8.4\n","google-colab                  1.0.0\n","google-crc32c                 1.5.0\n","google-pasta                  0.2.0\n","google-resumable-media        2.4.0\n","googleapis-common-protos      1.57.0\n","googledrivedownloader         0.4\n","graphviz                      0.10.1\n","greenlet                      2.0.1\n","grpcio                        1.51.1\n","grpcio-status                 1.48.2\n","gspread                       3.4.2\n","gspread-dataframe             3.0.8\n","gym                           0.25.2\n","gym-notices                   0.0.8\n","h5py                          3.1.0\n","HeapDict                      1.0.1\n","hijri-converter               2.2.4\n","holidays                      0.17.2\n","holoviews                     1.14.9\n","html5lib                      1.0.1\n","httpimport                    0.5.18\n","httplib2                      0.17.4\n","httpstan                      4.6.1\n","humanize                      0.5.1\n","hyperopt                      0.1.2\n","idna                          2.10\n","imageio                       2.9.0\n","imagesize                     1.4.1\n","imbalanced-learn              0.8.1\n","imblearn                      0.0\n","imgaug                        0.4.0\n","importlib-metadata            5.1.0\n","importlib-resources           5.10.1\n","imutils                       0.5.4\n","inflect                       2.1.0\n","intel-openmp                  2022.2.1\n","intervaltree                  2.1.0\n","ipykernel                     5.3.4\n","ipython                       7.9.0\n","ipython-genutils              0.2.0\n","ipython-sql                   0.3.9\n","ipywidgets                    7.7.1\n","itsdangerous                  1.1.0\n","jax                           0.3.25\n","jaxlib                        0.3.25+cuda11.cudnn805\n","jieba                         0.42.1\n","Jinja2                        2.11.3\n","joblib                        1.2.0\n","jpeg4py                       0.1.4\n","jsonschema                    4.3.3\n","jupyter-client                6.1.12\n","jupyter-console               6.1.0\n","jupyter-core                  5.1.0\n","jupyterlab-widgets            3.0.4\n","kaggle                        1.5.12\n","kapre                         0.3.7\n","keras                         2.9.0\n","Keras-Preprocessing           1.1.2\n","keras-vis                     0.4.1\n","kiwisolver                    1.4.4\n","korean-lunar-calendar         0.3.1\n","langcodes                     3.3.0\n","libclang                      14.0.6\n","librosa                       0.8.1\n","lightgbm                      2.2.3\n","llvmlite                      0.39.1\n","lmdb                          0.99\n","locket                        1.0.0\n","logical-unification           0.4.5\n","LunarCalendar                 0.0.9\n","lxml                          4.9.2\n","Markdown                      3.4.1\n","MarkupSafe                    2.0.1\n","marshmallow                   3.19.0\n","matplotlib                    3.2.2\n","matplotlib-venn               0.11.7\n","miniKanren                    1.0.3\n","missingno                     0.5.1\n","mistune                       0.8.4\n","mizani                        0.7.3\n","mkl                           2019.0\n","mlxtend                       0.14.0\n","more-itertools                9.0.0\n","moviepy                       0.2.3.5\n","mpmath                        1.2.1\n","msgpack                       1.0.4\n","multidict                     6.0.3\n","multipledispatch              0.6.0\n","multitasking                  0.0.11\n","murmurhash                    1.0.9\n","music21                       5.5.0\n","natsort                       5.5.0\n","nbconvert                     5.6.1\n","nbformat                      5.7.0\n","netCDF4                       1.6.2\n","networkx                      2.8.8\n","nibabel                       3.0.2\n","nltk                          3.7\n","notebook                      5.7.16\n","numba                         0.56.4\n","numexpr                       2.8.4\n","numpy                         1.21.6\n","oauth2client                  4.1.3\n","oauthlib                      3.2.2\n","okgrade                       0.4.3\n","opencv-contrib-python         4.6.0.66\n","opencv-python                 4.6.0.66\n","opencv-python-headless        4.6.0.66\n","openpyxl                      3.0.10\n","opt-einsum                    3.3.0\n","osqp                          0.6.2.post0\n","packaging                     21.3\n","palettable                    3.3.0\n","pandas                        1.3.5\n","pandas-datareader             0.9.0\n","pandas-gbq                    0.17.9\n","pandas-profiling              1.4.1\n","pandocfilters                 1.5.0\n","panel                         0.12.1\n","param                         1.12.3\n","parso                         0.8.3\n","partd                         1.3.0\n","pastel                        0.2.1\n","pathlib                       1.0.1\n","pathy                         0.10.1\n","patsy                         0.5.3\n","pep517                        0.13.0\n","pexpect                       4.8.0\n","pickleshare                   0.7.5\n","Pillow                        7.1.2\n","pip                           21.1.3\n","pip-tools                     6.2.0\n","platformdirs                  2.6.0\n","plotly                        5.5.0\n","plotnine                      0.8.0\n","pluggy                        0.7.1\n","pooch                         1.6.0\n","portpicker                    1.3.9\n","prefetch-generator            1.0.3\n","preshed                       3.0.8\n","prettytable                   3.5.0\n","progressbar2                  3.38.0\n","prometheus-client             0.15.0\n","promise                       2.3\n","prompt-toolkit                2.0.10\n","prophet                       1.1.1\n","proto-plus                    1.22.1\n","protobuf                      3.19.6\n","psutil                        5.4.8\n","psycopg2                      2.9.5\n","ptyprocess                    0.7.0\n","py                            1.11.0\n","pyarrow                       9.0.0\n","pyasn1                        0.4.8\n","pyasn1-modules                0.2.8\n","pycocotools                   2.0.6\n","pycparser                     2.21\n","pyct                          0.4.8\n","pydantic                      1.10.2\n","pydata-google-auth            1.4.0\n","pydot                         1.3.0\n","pydot-ng                      2.0.0\n","pydotplus                     2.0.2\n","PyDrive                       1.3.1\n","pyemd                         0.5.1\n","pyerfa                        2.0.0.1\n","Pygments                      2.6.1\n","pygobject                     3.26.1\n","pylev                         1.4.0\n","pymc                          4.1.4\n","PyMeeus                       0.5.12\n","pymongo                       4.3.3\n","pymystem3                     0.2.0\n","PyOpenGL                      3.1.6\n","pyparsing                     3.0.9\n","pyrsistent                    0.19.2\n","pysimdjson                    3.2.0\n","pysndfile                     1.3.8\n","PySocks                       1.7.1\n","pystan                        3.3.0\n","pytest                        3.6.4\n","python-apt                    0.0.0\n","python-dateutil               2.8.2\n","python-louvain                0.16\n","python-slugify                7.0.0\n","python-utils                  3.4.5\n","pytz                          2022.6\n","pyviz-comms                   2.2.1\n","PyWavelets                    1.4.1\n","PyYAML                        6.0\n","pyzmq                         23.2.1\n","qdldl                         0.1.5.post2\n","qudida                        0.0.4\n","regex                         2022.6.2\n","requests                      2.23.0\n","requests-oauthlib             1.3.1\n","resampy                       0.4.2\n","rpy2                          3.5.5\n","rsa                           4.9\n","scikit-image                  0.18.3\n","scikit-learn                  1.0.2\n","scipy                         1.7.3\n","screen-resolution-extra       0.0.0\n","scs                           3.2.2\n","seaborn                       0.11.2\n","Send2Trash                    1.8.0\n","setuptools                    57.4.0\n","setuptools-git                1.2\n","shapely                       2.0.0\n","six                           1.15.0\n","sklearn-pandas                1.8.0\n","smart-open                    6.3.0\n","snowballstemmer               2.2.0\n","sortedcontainers              2.4.0\n","soundfile                     0.11.0\n","spacy                         3.4.4\n","spacy-legacy                  3.0.10\n","spacy-loggers                 1.0.4\n","Sphinx                        1.8.6\n","sphinxcontrib-serializinghtml 1.1.5\n","sphinxcontrib-websupport      1.2.4\n","SQLAlchemy                    1.4.45\n","sqlparse                      0.4.3\n","srsly                         2.4.5\n","statsmodels                   0.12.2\n","sympy                         1.7.1\n","tables                        3.7.0\n","tabulate                      0.8.10\n","tblib                         1.7.0\n","tenacity                      8.1.0\n","tensorboard                   2.9.1\n","tensorboard-data-server       0.6.1\n","tensorboard-plugin-wit        1.8.1\n","tensorflow                    2.9.2\n","tensorflow-datasets           4.6.0\n","tensorflow-estimator          2.9.0\n","tensorflow-gcs-config         2.9.1\n","tensorflow-hub                0.12.0\n","tensorflow-io-gcs-filesystem  0.28.0\n","tensorflow-metadata           1.12.0\n","tensorflow-probability        0.17.0\n","termcolor                     2.1.1\n","terminado                     0.13.3\n","testpath                      0.6.0\n","text-unidecode                1.3\n","textblob                      0.15.3\n","thinc                         8.1.5\n","threadpoolctl                 3.1.0\n","tifffile                      2022.10.10\n","toml                          0.10.2\n","tomli                         2.0.1\n","toolz                         0.12.0\n","torch                         1.13.0+cu116\n","torchaudio                    0.13.0+cu116\n","torchsummary                  1.5.1\n","torchtext                     0.14.0\n","torchvision                   0.14.0+cu116\n","tornado                       6.0.4\n","tqdm                          4.64.1\n","traitlets                     5.7.1\n","tweepy                        3.10.0\n","typeguard                     2.7.1\n","typer                         0.7.0\n","typing-extensions             4.4.0\n","tzlocal                       1.5.1\n","uritemplate                   3.0.1\n","urllib3                       1.24.3\n","vega-datasets                 0.9.0\n","wasabi                        0.10.1\n","wcwidth                       0.2.5\n","webargs                       8.2.0\n","webencodings                  0.5.1\n","Werkzeug                      1.0.1\n","wheel                         0.38.4\n","widgetsnbextension            3.6.1\n","wordcloud                     1.8.2.2\n","wrapt                         1.14.1\n","xarray                        2022.12.0\n","xarray-einstats               0.4.0\n","xgboost                       0.90\n","xkit                          0.0.0\n","xlrd                          1.2.0\n","xlwt                          1.3.0\n","yarl                          1.8.2\n","yellowbrick                   1.5\n","zict                          2.2.0\n","zipp                          3.11.0\n"]}]},{"cell_type":"markdown","metadata":{"id":"Ew1q3l5LmbDy"},"source":["##1 Machine learning"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":25891,"status":"ok","timestamp":1671503370534,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"},"user_tz":180},"id":"EhfZz5RBc9FZ","outputId":"bf143f1e-10bb-46d0-aa09-ef2b3b49dd8b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["%matplotlib inline\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns; sns.set()\n","from google.colab import drive\n","from pandas.core.algorithms import value_counts_arraylike\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import mean_squared_error, r2_score\n","from sklearn.model_selection import cross_val_score, cross_validate\n","\n","\n","\n","root = '/content/drive'\n","drive.mount(root, force_remount=True)\n","\n","dir_path = \"{}/MyDrive/SENAI/TCC/Dataset/Turbofan/\".format(root)\n","\n","index_names = ['unit_nr', 'time_cycles']\n","setting_names = ['setting_1', 'setting_2', 'setting_3']\n","sensor_names = ['s_{}'.format(i) for i in range(1,22)] \n","col_names = index_names + setting_names + sensor_names\n","\n","train = pd.read_csv((dir_path+'train_FD001.txt'), sep='\\s+', header=None, names=col_names)\n","test = pd.read_csv((dir_path+'test_FD001.txt'), sep='\\s+', header=None, names=col_names)\n","y_test = pd.read_csv((dir_path+'RUL_FD001.txt'), sep='\\s+', header=None, names=['RUL'])\n","\n","def add_remaining_useful_life(df):\n","    grouped_by_unit = df.groupby(by=\"unit_nr\")\n","    max_cycle = grouped_by_unit[\"time_cycles\"].max()\n","    result_frame = df.merge(max_cycle.to_frame(name='max_cycle'), left_on='unit_nr', right_index=True)\n","    remaining_useful_life = result_frame[\"max_cycle\"] - result_frame[\"time_cycles\"]\n","    result_frame[\"RUL\"] = remaining_useful_life\n","    result_frame = result_frame.drop(\"max_cycle\", axis=1)\n","    return result_frame\n","  \n","train = add_remaining_useful_life(train)\n","train[index_names+['RUL']].head()\n","\n","def plot_sensor(sensor_name):\n","    plt.figure(figsize=(13,5))\n","    for i in train['unit_nr'].unique():\n","        if (i % 10 == 0):  # only plot every 10th unit_nr\n","            plt.plot('RUL', sensor_name, \n","                     data=train[train['unit_nr']==i])\n","    plt.xlim(250, 0)  # reverse the x-axis so RUL counts down to zero\n","    plt.xticks(np.arange(0, 275, 25))\n","    plt.ylabel(sensor_name)\n","    plt.xlabel('RUL')\n","    plt.show()\n","\n","drop_sensors = ['s_1','s_5','s_6','s_10','s_16','s_18','s_19']\n","drop_labels = index_names+setting_names+drop_sensors\n","X_train = train.drop(drop_labels, axis=1)\n","X_test = test.groupby('unit_nr').last().reset_index().drop(drop_labels, axis=1)\n","y_train = X_train.pop('RUL')\n","\n","def display_scores(scores, score_name = None):\n","  if score_name != None:\n","    scores_name = 'Scores for ' + score_name + ':'\n","    Mean_name = 'Mean for ' + score_name + ':'\n","    sd_name = 'Standard deviation for ' + score_name + ':'\n","  else:\n","    scores_name = 'Scores:'\n","    Mean_name = 'Mean:'\n","    sd_name = 'Standard deviation:'\n","  print(scores_name, scores)\n","  print(Mean_name, scores.mean())\n","  print(sd_name, scores.std())\n","\n","def normalize(dataset):\n","  for column in dataset:\n","    dataset[column] = (dataset[column] - dataset[column].min()) / (dataset[column].max() - dataset[column].min())\n","\n","normalize(X_train)\n","\n","def get_error_values(y, y_hat):\n","  r = [];\n","  for i in range(len(y)):\n","    x = y[i] - y_hat[i]\n","    x = x**2\n","    x = np.sqrt(x)\n","    r.append(x)\n","  return r\n","\n","def get_values_motors(dataset, boolExpression):\n","  values = []\n","  for i in range(0, len(dataset)):\n","    if(boolExpression):\n","      value = dataset[i]\n","      values.append(value)\n","  return values;\n","\n","def evaluate(model, dataset_x_train, dataset_y_train):\n","  scores = cross_validate(model, dataset_x_train, dataset_y_train, groups=None, scoring=\"neg_mean_squared_error\", cv=5, n_jobs=5, return_train_score=True, return_estimator=True, error_score=1)\n","  rmse_score = np.sqrt(-scores['train_score'])\n","  display_scores(rmse_score, 'train')\n","  rmse_score = np.sqrt(-scores['test_score'])\n","  display_scores(rmse_score, 'test')\n","\n","def evaluate_rmse(y_true, y_hat, label='test'):\n","    mse = mean_squared_error(y_true, y_hat)\n","    rmse = np.sqrt(mse)\n","    variance = r2_score(y_true, y_hat)\n","    print('{} set RMSE:{}, R2:{}'.format(label, rmse, variance))\n","\n","def rmse(y_true, y_hat):\n","  mse = mean_squared_error(y_true, y_hat)\n","  return np.sqrt(mse)\n","\n","def r2(y_true, y_hat):\n","  return r2_score(y_true, y_hat)"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"executionInfo":{"elapsed":729,"status":"ok","timestamp":1671503371250,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"},"user_tz":180},"id":"gQ9Y8uGb8sUO","outputId":"0caa898f-35df-41e4-d1d5-d74d829c2c54"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x504 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["df_max_rul = train[['unit_nr', 'RUL']].groupby('unit_nr').max().reset_index()\n","df_max_rul['RUL'].hist(bins=15, figsize=(15,7))\n","plt.xlabel('RUL')\n","plt.ylabel('Frequência')\n","plt.show()"]},{"cell_type":"code","source":["for i in test[sensor_names]:\n","  plot_sensor(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"16rHyN5uDlkZElckQ9-f8xM62tSanOsSx"},"id":"berXaE_PD8r2","executionInfo":{"status":"ok","timestamp":1671503377668,"user_tz":180,"elapsed":6432,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}},"outputId":"0650c596-f7d0-4aa3-d5d8-8f3fa5c331f6"},"execution_count":8,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"rz37qJ1JYDmV"},"source":["##2 Modelos"]},{"cell_type":"markdown","metadata":{"id":"Fcq56Vl5Omzv"},"source":["###Regressão linear"]},{"cell_type":"code","execution_count":9,"metadata":{"id":"7R0LXQgR-Xz3","executionInfo":{"status":"ok","timestamp":1671503377671,"user_tz":180,"elapsed":34,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}}},"outputs":[],"source":["from sklearn.linear_model import LinearRegression\n","# create and fit model\n","lin_reg = LinearRegression()"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3538,"status":"ok","timestamp":1671503381179,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"},"user_tz":180},"id":"hlddT2o2WRgF","outputId":"a7d9849d-b5ac-4d57-ec2f-83cdba396be7"},"outputs":[{"output_type":"stream","name":"stdout","text":["Scores for train: [46.17397292 46.64112407 45.48332318 42.48401651 41.9998409 ]\n","Mean for train: 44.55645551703991\n","Standard deviation for train: 1.9314539056716635\n","Scores for test: [38.15881075 36.10088945 41.64097056 52.91203435 54.45062703]\n","Mean for test: 44.652666429459074\n","Standard deviation for test: 7.597243626798437\n"]}],"source":["scores = cross_validate(lin_reg, X_train, y_train, groups=None, scoring=\"neg_mean_squared_error\", cv=5, n_jobs=5, return_train_score=True, return_estimator=True, error_score=1)\n","rmse_score = np.sqrt(-scores['train_score'])\n","display_scores(rmse_score, 'train')\n","rmse_score = np.sqrt(-scores['test_score'])\n","display_scores(rmse_score, 'test')"]},{"cell_type":"code","execution_count":11,"metadata":{"id":"2-H7dsVbAKmO","executionInfo":{"status":"ok","timestamp":1671503381181,"user_tz":180,"elapsed":24,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}}},"outputs":[],"source":["from sklearn.model_selection import cross_val_predict\n","predicts_lin_reg = cross_val_predict(lin_reg, X_test, y_test, cv = 5)"]},{"cell_type":"markdown","source":["####Gráfico de dispersão"],"metadata":{"id":"xpBC8jewnm2X"}},{"cell_type":"code","source":["y = get_values_motors(y_test['RUL'].values, True)\n","y_hat = get_values_motors(pd.DataFrame(predicts_lin_reg, columns=['RUL'])['RUL'].values, True)\n","\n","rt = pd.DataFrame({\n","    'y': y,\n","    'y_hat': y_hat\n","})\n","rt['error'] = np.sqrt((rt['y'] - rt['y_hat'])**2)\n","\n","plt.figure(figsize=(10,6))\n","plt.scatter(rt['y'], rt['error'])\n","plt.xlabel(\"RUL\")\n","plt.ylabel(\"Erro\")\n","plt.grid(True)\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"ZnZc5xa_mBrf","executionInfo":{"status":"ok","timestamp":1671503381929,"user_tz":180,"elapsed":768,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}},"outputId":"31e3ec10-06f8-44ef-e818-68498aecb0b8"},"execution_count":12,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x432 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["####Histograma comparativo"],"metadata":{"id":"LEUTF2QOxj8U"}},{"cell_type":"code","source":["bins = np.linspace(0, 150, 15)\n","plt.figure(figsize=(15,7)) \n","plt.hist(rt['y'], bins, alpha=0.9, label='Real')\n","plt.hist(rt['y_hat'], bins, alpha=0.5, label='Predito')\n","plt.xlabel('RUL')\n","plt.ylabel('Frequência')\n","plt.legend()\n","plt.show()"],"metadata":{"id":"3EkgiFiXxaaU","colab":{"base_uri":"https://localhost:8080/","height":448},"executionInfo":{"status":"ok","timestamp":1671503382414,"user_tz":180,"elapsed":506,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}},"outputId":"a71a1e3e-3552-4df2-a160-761e10e65aac"},"execution_count":13,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x504 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"ruCktD4uPoyI"},"source":["###Árvore de decisão"]},{"cell_type":"code","execution_count":14,"metadata":{"id":"WQWWAIkzQzzd","executionInfo":{"status":"ok","timestamp":1671503382758,"user_tz":180,"elapsed":8,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}}},"outputs":[],"source":["from sklearn.tree import DecisionTreeRegressor\n","tree_reg = DecisionTreeRegressor(max_depth=4)"]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":781,"status":"ok","timestamp":1671503383532,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"},"user_tz":180},"id":"41IVdu7zQzzf","outputId":"e0ef6b46-c5bb-4bcc-9acd-ce6c9f70f336"},"outputs":[{"output_type":"stream","name":"stdout","text":["Scores for train: [47.00099686 46.98076789 46.07969473 43.20164825 42.56765405]\n","Mean for train: 45.16615235573097\n","Standard deviation for train: 1.9029195149188267\n","Scores for test: [38.97002145 39.2370892  41.43244701 53.68707208 56.33307727]\n","Mean for test: 45.931941402923314\n","Standard deviation for test: 7.5081356472908025\n"]}],"source":["scores = cross_validate(tree_reg, X_train, y_train, groups=None, scoring=\"neg_mean_squared_error\", cv=5, n_jobs=5, return_train_score=True, return_estimator=True, error_score=1)\n","rmse_score = np.sqrt(-scores['train_score'])\n","display_scores(rmse_score, 'train')\n","rmse_score = np.sqrt(-scores['test_score'])\n","display_scores(rmse_score, 'test')"]},{"cell_type":"code","execution_count":16,"metadata":{"id":"cm5G-8UUQzzh","executionInfo":{"status":"ok","timestamp":1671503383533,"user_tz":180,"elapsed":7,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}}},"outputs":[],"source":["from sklearn.model_selection import cross_val_predict\n","predicts_tree_reg = cross_val_predict(tree_reg, X_test, y_test, cv = 5)"]},{"cell_type":"markdown","source":["####Gráfico de dispersão"],"metadata":{"id":"k1xrQDAXyhhV"}},{"cell_type":"code","source":["y = get_values_motors(y_test['RUL'].values, True)\n","y_hat = get_values_motors(pd.DataFrame(predicts_tree_reg, columns=['RUL'])['RUL'].values, True)\n","\n","rt = pd.DataFrame({\n","    'y': y,\n","    'y_hat': y_hat\n","})\n","rt['error'] = np.sqrt((rt['y'] - rt['y_hat'])**2)\n","\n","plt.figure(figsize=(10,6))\n","plt.scatter(rt['y'], rt['error'])\n","plt.xlabel(\"RUL\")\n","plt.ylabel(\"Erro\")\n","plt.grid(True)\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"executionInfo":{"status":"ok","timestamp":1671503384049,"user_tz":180,"elapsed":522,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}},"outputId":"5bf6a0e7-bb50-4668-c36a-ae67262c2669","id":"qcYD1BYjyZq8"},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x432 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["####Histograma comparativo"],"metadata":{"id":"re0mosUMylYA"}},{"cell_type":"code","source":["bins = np.linspace(0, 150, 15)\n","plt.figure(figsize=(15,7)) \n","plt.hist(rt['y'], bins, alpha=0.9, label='Real')\n","plt.hist(rt['y_hat'], bins, alpha=0.5, label='Predito')\n","plt.xlabel('RUL')\n","plt.ylabel('Frequência')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"4SNMzhYyN9B8","executionInfo":{"status":"ok","timestamp":1671503385112,"user_tz":180,"elapsed":1074,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}},"outputId":"2cac89a9-0e88-4c0d-f637-41ccd17caba0"},"execution_count":18,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x504 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"C5Uzs-lpXVdF"},"source":["###Florestas aleatórias"]},{"cell_type":"code","execution_count":19,"metadata":{"id":"flVxiYu5kiNY","executionInfo":{"status":"ok","timestamp":1671503385114,"user_tz":180,"elapsed":14,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}}},"outputs":[],"source":["from sklearn.ensemble import RandomForestRegressor\n","\n","forest_reg = RandomForestRegressor()"]},{"cell_type":"markdown","metadata":{"id":"AWt9WrUnJ16S"},"source":["####RandomizedSearch"]},{"cell_type":"code","execution_count":20,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":641561,"status":"ok","timestamp":1671504026662,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"},"user_tz":180},"id":"lzg32m8YJ5EF","outputId":"db475db9-081f-452d-c0b8-1325a6456ebb"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'max_features': 0.34463189720441234,\n"," 'min_samples_split': 0.012015962066134674,\n"," 'n_estimators': 42}"]},"metadata":{},"execution_count":20}],"source":["from scipy.stats import uniform\n","from scipy.stats import randint\n","from scipy.stats import truncnorm\n","from sklearn.model_selection import RandomizedSearchCV\n","param_grid = {\n","  'n_estimators': randint(4,200), \n","  'max_features': truncnorm(a=0,b=1,loc=0.25,scale=0.1),\n","  'min_samples_split': uniform(0.01, 0.199)\n","}\n","grid_search = RandomizedSearchCV(forest_reg, param_grid, n_iter=100, cv=5, scoring='neg_mean_squared_error')\n","grid_search.fit(X_train, y_train)\n","grid_search.best_params_\n"]},{"cell_type":"code","execution_count":21,"metadata":{"id":"rS5q4ekFL75y","executionInfo":{"status":"ok","timestamp":1671504026664,"user_tz":180,"elapsed":37,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}}},"outputs":[],"source":["best_RandomForestRegressor = grid_search.best_estimator_"]},{"cell_type":"code","source":["print(best_RandomForestRegressor)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X0sQk0gmVy72","executionInfo":{"status":"ok","timestamp":1671504026665,"user_tz":180,"elapsed":34,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}},"outputId":"5bd45ffa-1a05-4287-b84c-e4b6f7afd3a7"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["RandomForestRegressor(max_features=0.34463189720441234,\n","                      min_samples_split=0.012015962066134674, n_estimators=42)\n"]}]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":23040,"status":"ok","timestamp":1671504049687,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"},"user_tz":180},"id":"ZGDrXTFDQjlq","outputId":"76599386-2c38-45f9-92af-a9a27cc70ae6"},"outputs":[{"output_type":"stream","name":"stdout","text":["Scores for train: [41.20638778 41.35367391 40.65512605 37.28635001 37.01306343]\n","Mean for train: 39.50292023778984\n","Standard deviation for train: 1.937381715946626\n","Scores for test: [35.50707189 34.50898681 37.75009005 51.78041523 52.61411985]\n","Mean for test: 42.432136764768124\n","Standard deviation for test: 8.046334319359561\n"]}],"source":["forest_reg_with_randomized_search = RandomForestRegressor(max_features=0.33283600344370706,\n","                      min_samples_split=0.01266401590507004, n_estimators=176)\n","scores = cross_validate(forest_reg_with_randomized_search, X_train, y_train, groups=None, scoring=\"neg_mean_squared_error\", cv=5, n_jobs=5, return_train_score=True, return_estimator=True, error_score=1)\n","rmse_score = np.sqrt(-scores['train_score'])\n","display_scores(rmse_score, 'train')\n","rmse_score = np.sqrt(-scores['test_score'])\n","display_scores(rmse_score, 'test')"]},{"cell_type":"code","execution_count":24,"metadata":{"id":"Jzi9E-DSoqMr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1671504050695,"user_tz":180,"elapsed":1047,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}},"outputId":"b1859150-ee92-49b0-99c7-8acd543a0799"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/model_selection/_validation.py:1044: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n","  estimator.fit(X_train, y_train, **fit_params)\n","/usr/local/lib/python3.8/dist-packages/sklearn/model_selection/_validation.py:1044: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n","  estimator.fit(X_train, y_train, **fit_params)\n","/usr/local/lib/python3.8/dist-packages/sklearn/model_selection/_validation.py:1044: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n","  estimator.fit(X_train, y_train, **fit_params)\n","/usr/local/lib/python3.8/dist-packages/sklearn/model_selection/_validation.py:1044: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n","  estimator.fit(X_train, y_train, **fit_params)\n","/usr/local/lib/python3.8/dist-packages/sklearn/model_selection/_validation.py:1044: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n","  estimator.fit(X_train, y_train, **fit_params)\n"]}],"source":["from sklearn.model_selection import cross_val_predict\n","predicts_forest_reg_with_randomized_search = cross_val_predict(forest_reg_with_randomized_search, X_test, y_test, cv = 5)"]},{"cell_type":"markdown","source":["####Gráfico de dispersão"],"metadata":{"id":"f7BZgmEKzFrN"}},{"cell_type":"code","source":["y = get_values_motors(y_test['RUL'].values, True)\n","y_hat = get_values_motors(pd.DataFrame(predicts_forest_reg_with_randomized_search, columns=['RUL'])['RUL'].values, True)\n","\n","rt = pd.DataFrame({\n","    'y': y,\n","    'y_hat': y_hat\n","})\n","rt['error'] = np.sqrt((rt['y'] - rt['y_hat'])**2)\n","\n","plt.figure(figsize=(10,6))\n","plt.scatter(rt['y'], rt['error'])\n","plt.xlabel(\"RUL\")\n","plt.ylabel(\"Erro\")\n","plt.grid(True)\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":397},"executionInfo":{"status":"ok","timestamp":1671504051059,"user_tz":180,"elapsed":370,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}},"outputId":"a6409df2-2ed2-401e-f87b-65c8a3f1404b","id":"rNhNFloPzFro"},"execution_count":25,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x432 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["####Histograma comparativo"],"metadata":{"id":"X5JEXxHCzFrq"}},{"cell_type":"code","source":["bins = np.linspace(0, 150, 15)\n","plt.figure(figsize=(15,7)) \n","plt.hist(rt['y'], bins, alpha=0.9, label='Real')\n","plt.hist(rt['y_hat'], bins, alpha=0.5, label='Predito')\n","plt.xlabel('RUL')\n","plt.ylabel('Frequência')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"87qj-GF7N2__","executionInfo":{"status":"ok","timestamp":1671504051418,"user_tz":180,"elapsed":373,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}},"outputId":"014cb2dd-9608-4384-c2c6-36b426adffe7"},"execution_count":26,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x504 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"CR7w1RU_90mk"},"source":["###SVR Linear"]},{"cell_type":"code","execution_count":28,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":88131,"status":"ok","timestamp":1671504139880,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"},"user_tz":180},"id":"z6NbU_Uc9z-n","outputId":"4abcc205-9e3f-4f95-d17e-fde7f3f52127"},"outputs":[{"output_type":"stream","name":"stdout","text":["Scores for train: [47.30578543 47.65244863 46.50232874 43.40301372 42.84212667]\n","Mean for train: 45.54114064021939\n","Standard deviation for train: 2.017510266183517\n","Scores for test: [38.14154754 34.20934606 40.16791297 55.80883866 57.20979252]\n","Mean for test: 45.10748754827902\n","Standard deviation for test: 9.515018719873941\n"]}],"source":["from sklearn.svm import SVR\n","svr = SVR(kernel='linear')\n","scores = cross_validate(svr, X_train, y_train, groups=None, scoring=\"neg_mean_squared_error\", cv=5, n_jobs=5, return_train_score=True, return_estimator=True, error_score=1)\n","rmse_score = np.sqrt(-scores['train_score'])\n","display_scores(rmse_score, 'train')\n","rmse_score = np.sqrt(-scores['test_score'])\n","display_scores(rmse_score, 'test')"]},{"cell_type":"code","execution_count":29,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":44,"status":"ok","timestamp":1671504139881,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"},"user_tz":180},"id":"lXQ0sAnz_z3r","outputId":"fdc28d86-56ba-40f6-f99c-e1bc360455bd"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"]}],"source":["from sklearn.model_selection import cross_val_predict\n","predicts_svr = cross_val_predict(svr, X_test, y_test, cv = 5)"]},{"cell_type":"markdown","source":["####Gráfico de dispersão"],"metadata":{"id":"MvyrJFB4zTe-"}},{"cell_type":"code","source":["y = get_values_motors(y_test['RUL'].values, True)\n","y_hat = get_values_motors(pd.DataFrame(predicts_svr, columns=['RUL'])['RUL'].values, True)\n","\n","rt = pd.DataFrame({\n","    'y': y,\n","    'y_hat': y_hat\n","})\n","rt['error'] = np.sqrt((rt['y'] - rt['y_hat'])**2)\n","\n","plt.figure(figsize=(10,6))\n","plt.scatter(rt['y'], rt['error'])\n","plt.xlabel(\"RUL\")\n","plt.ylabel(\"Erro\")\n","plt.grid(True)\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"Cg-GvF5ezTe_","executionInfo":{"status":"ok","timestamp":1671504140447,"user_tz":180,"elapsed":594,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}},"outputId":"81ec660a-78e0-40af-c096-0385b0d86e75"},"execution_count":30,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x432 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["####Histograma comparativo"],"metadata":{"id":"5GfK3WMizTfA"}},{"cell_type":"code","source":["bins = np.linspace(0, 150, 15)\n","plt.figure(figsize=(15,7)) \n","plt.hist(rt['y'], bins, alpha=0.9, label='Real')\n","plt.hist(rt['y_hat'], bins, alpha=0.5, label='Predito')\n","plt.xlabel('RUL')\n","plt.ylabel('Frequência')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"9ZNMpSryNsgm","executionInfo":{"status":"ok","timestamp":1671504141006,"user_tz":180,"elapsed":571,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}},"outputId":"73834f69-3934-4c5a-9f72-31ef69fa5536"},"execution_count":31,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x504 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"owNOIqI1pue0"},"source":["##3 Comparação"]},{"cell_type":"markdown","source":["###Boxplot"],"metadata":{"id":"KgMuHMt4B2Gi"}},{"cell_type":"code","source":["y = get_values_motors(y_test['RUL'].values, True)\n","lin = get_values_motors(pd.DataFrame(predicts_lin_reg, columns=['RUL'])['RUL'].values, True)\n","tree = get_values_motors(pd.DataFrame(predicts_tree_reg, columns=['RUL'])['RUL'].values, True)\n","svr = get_values_motors(pd.DataFrame(predicts_svr, columns=['RUL'])['RUL'].values, True)\n","rfors = get_values_motors(pd.DataFrame(predicts_forest_reg_with_randomized_search, columns=['RUL'])['RUL'].values, True)\n","\n","rt = pd.DataFrame({\n","    'y': y,\n","    'lin': lin,\n","    'tree': tree,\n","    'svr': svr,\n","    'rfors': rfors,\n","})\n","\n","rt['lin_error'] = np.sqrt((rt['y'] - rt['lin'])**2)\n","rt['tree_error'] = np.sqrt((rt['y'] - rt['tree'])**2)\n","rt['svr_error'] = np.sqrt((rt['y'] - rt['svr'])**2)\n","rt['rfors_error'] = np.sqrt((rt['y'] - rt['rfors'])**2)\n","\n","# Creating dataset\n","np.random.seed(10)\n","\n","data_1 = rt['lin_error']\n","data_2 = rt['tree_error']\n","data_3 = rt['svr_error']\n","data_4 = rt['rfors_error']\n","data = [data_1, data_2, data_3, data_4]\n","\n","fig = plt.figure(figsize =(10, 7))\n","ax = fig.add_subplot(111)\n","\n","# Creating axes instance\n","bp = ax.boxplot(data, patch_artist = True, vert = 1)\n","\n","colors = ['#556B2F', '#DEB887',\n","\t\t'#B0C4DE', '#e06666']\n","\n","for patch, color in zip(bp['boxes'], colors):\n","\tpatch.set_facecolor(color)\n","\n","# changing color and linewidth of\n","# whiskers\n","for whisker in bp['whiskers']:\n","\twhisker.set(color ='#8B008B',\n","\t\t\t\tlinewidth = 1.5,\n","\t\t\t\tlinestyle =\":\")\n","\n","# changing color and linewidth of\n","# caps\n","for cap in bp['caps']:\n","\tcap.set(color ='#8B008B',\n","\t\t\tlinewidth = 2)\n","\n","# changing color and linewidth of\n","# medians\n","for median in bp['medians']:\n","\tmedian.set(color ='red',\n","\t\t\tlinewidth = 3)\n","\n","# changing style of fliers\n","for flier in bp['fliers']:\n","\tflier.set(marker ='D',\n","\t\t\tcolor ='#e7298a',\n","\t\t\talpha = 0.5)\n","\t\n","# x-axis labels\n","ax.set_xticklabels(['Regressão Linear', 'Árvore de Decisão',\n","\t\t\t\t\t'SVR', 'Florestas Aleatórias'])\n","\n","# Adding title\n","#plt.title(\"Customized box plot\")\n","\n","# Removing top axes and right axes\n","# ticks\n","ax.get_xaxis().tick_bottom()\n","ax.get_yaxis().tick_left()\n","plt.ylabel('Erro')\n","\t\n","# show plot\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":431},"id":"uftrF3g-kSag","executionInfo":{"status":"ok","timestamp":1671504141008,"user_tz":180,"elapsed":49,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}},"outputId":"803b3b00-f990-454d-f0e5-56d3d161dddc"},"execution_count":32,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x504 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","y = get_values_motors(y_test['RUL'].values, True)\n","lin = get_values_motors(pd.DataFrame(predicts_lin_reg, columns=['RUL'])['RUL'].values, True)\n","tree = get_values_motors(pd.DataFrame(predicts_tree_reg, columns=['RUL'])['RUL'].values, True)\n","svr = get_values_motors(pd.DataFrame(predicts_svr, columns=['RUL'])['RUL'].values, True)\n","rfors = get_values_motors(pd.DataFrame(predicts_forest_reg_with_randomized_search, columns=['RUL'])['RUL'].values, True)\n","\n","rt = pd.DataFrame({\n","    'y': y,\n","    'lin': lin,\n","    'tree': tree,\n","    'svr': svr,\n","    'rfors': rfors,\n","})\n","\n","evaluate_rmse(rt[\"y\"], rt['lin'], \"lin\")\n","evaluate_rmse(rt[\"y\"], rt['tree'], \"tree\")\n","evaluate_rmse(rt[\"y\"], rt['svr'], \"svr\")\n","evaluate_rmse(rt[\"y\"], rt['rfors'], \"rfo\")\n","\n","lin_rmse = rmse(rt['y'], rt['lin'])\n","tree_rmse = rmse(rt['y'], rt['tree'])\n","svr_rmse = rmse(rt['y'], rt['svr'])\n","rfo_rmse = rmse(rt['y'], rt['rfors'])\n","\n","lin_r2 = r2(rt['y'], rt['lin'])\n","tree_r2 = r2(rt['y'], rt['tree'])\n","svr_r2 = r2(rt['y'], rt['svr'])\n","rfo_r2 = r2(rt['y'], rt['rfors'])\n","\n"],"metadata":{"id":"XKI9UEH1cJ4H","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1671504276549,"user_tz":180,"elapsed":301,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}},"outputId":"f985bc7c-1162-4146-8c7b-4264e59f473d"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["lin set RMSE:21.89088800244334, R2:0.7224972994280994\n","tree set RMSE:28.341302634944142, R2:0.5348638744665538\n","svr set RMSE:33.475258885395824, R2:0.3510842061008703\n","rfo set RMSE:21.08799179134511, R2:0.7424800356715766\n"]}]},{"cell_type":"markdown","source":["###Discrepância"],"metadata":{"id":"d3n1N7kqBvFp"}},{"cell_type":"code","source":["def get_whiskers(arr1):\n","  q1 = np.quantile(arr1, 0.25)\n","  q3 = np.quantile(arr1, 0.75)\n","  med = np.median(arr1)\n","  iqr = q3-q1\n","  upper_bound = q3+(1.5*iqr)\n","  lower_bound = q1-(1.5*iqr)\n","  return {\n","      'upper_bound': upper_bound,\n","      'lower_bound': lower_bound,\n","  }"],"metadata":{"id":"wHq4ZcT9Birl","executionInfo":{"status":"ok","timestamp":1671504286147,"user_tz":180,"elapsed":847,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["y = get_values_motors(y_test['RUL'].values, True)\n","lin = get_values_motors(pd.DataFrame(predicts_lin_reg, columns=['RUL'])['RUL'].values, True)\n","tree = get_values_motors(pd.DataFrame(predicts_tree_reg, columns=['RUL'])['RUL'].values, True)\n","svr = get_values_motors(pd.DataFrame(predicts_svr, columns=['RUL'])['RUL'].values, True)\n","rfors = get_values_motors(pd.DataFrame(predicts_forest_reg_with_randomized_search, columns=['RUL'])['RUL'].values, True)\n","\n","rt = pd.DataFrame({\n","    'y': y,\n","    'lin': lin,\n","    'tree': tree,\n","    'svr': svr,\n","    'rfors': rfors,\n","})\n","\n","rt['lin_error'] = np.sqrt((rt['y'] - rt['lin'])**2)\n","rt['tree_error'] = np.sqrt((rt['y'] - rt['tree'])**2)\n","rt['svr_error'] = np.sqrt((rt['y'] - rt['svr'])**2)\n","rt['rfors_error'] = np.sqrt((rt['y'] - rt['rfors'])**2)\n","\n","plt.figure(figsize=(10,6))\n","plt.scatter(rt['y'], rt['lin_error'], label='lin')\n","plt.scatter(rt['y'], rt['tree_error'], label='tree')\n","plt.scatter(rt['y'], rt['svr_error'], label='svr')\n","plt.scatter(rt['y'], rt['rfors_error'], label='rf')\n","plt.xlabel(\"RUL\")\n","plt.ylabel(\"Erro\")\n","plt.legend()\n","plt.grid(True)\n","plt.show()\n"],"metadata":{"id":"PKKO9XmDV7Dw","colab":{"base_uri":"https://localhost:8080/","height":394},"executionInfo":{"status":"ok","timestamp":1671504291628,"user_tz":180,"elapsed":883,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}},"outputId":"f6e421b0-a169-475a-ca78-be06b5be73a8"},"execution_count":37,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x432 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["rt.to_csv(dir_path + \"discrepancia.csv\", encoding = 'utf-8')"],"metadata":{"id":"ZbpFx6VEJTMa","executionInfo":{"status":"ok","timestamp":1671504295618,"user_tz":180,"elapsed":776,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}}},"execution_count":38,"outputs":[]},{"cell_type":"markdown","source":["####Linha 40 RUL 18"],"metadata":{"id":"PkJaJAGY5OG_"}},{"cell_type":"code","source":["y = get_values_motors(y_test['RUL'].values, True)\n","lin = get_values_motors(pd.DataFrame(predicts_lin_reg, columns=['RUL'])['RUL'].values, True)\n","tree = get_values_motors(pd.DataFrame(predicts_tree_reg, columns=['RUL'])['RUL'].values, True)\n","svr = get_values_motors(pd.DataFrame(predicts_svr, columns=['RUL'])['RUL'].values, True)\n","rfors = get_values_motors(pd.DataFrame(predicts_forest_reg_with_randomized_search, columns=['RUL'])['RUL'].values, True)\n","\n","rt = pd.DataFrame({\n","    'y': y,\n","    'lin': lin,\n","    'tree': tree,\n","    'svr': svr,\n","    'rfors': rfors,\n","})\n","\n","rt['lin_error'] = np.sqrt((rt['y'] - rt['lin'])**2)\n","rt['tree_error'] = np.sqrt((rt['y'] - rt['tree'])**2)\n","rt['svr_error'] = np.sqrt((rt['y'] - rt['svr'])**2)\n","rt['rfors_error'] = np.sqrt((rt['y'] - rt['rfors'])**2)\n","\n","plt.figure(figsize=(10,6))\n","plt.scatter(rt['y'][40], rt['lin_error'][40], label='lin')\n","plt.scatter(rt['y'][40], rt['tree_error'][40], label='tree')\n","plt.scatter(rt['y'][40], rt['svr_error'][40], label='svr')\n","plt.scatter(rt['y'][40], rt['rfors_error'][40], label='rf')\n","plt.xlabel(\"RUL\")\n","plt.ylabel(\"Erro\")\n","plt.legend()\n","plt.grid(True)\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"bxvoRb2Cx_mS","executionInfo":{"status":"ok","timestamp":1671504299227,"user_tz":180,"elapsed":825,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}},"outputId":"3c423d98-e60a-4586-a337-ac511e67ce7f"},"execution_count":39,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x432 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["#### Linha 23 RUL 20"],"metadata":{"id":"oQIFIjhs5XyY"}},{"cell_type":"code","source":["y = get_values_motors(y_test['RUL'].values, True)\n","lin = get_values_motors(pd.DataFrame(predicts_lin_reg, columns=['RUL'])['RUL'].values, True)\n","tree = get_values_motors(pd.DataFrame(predicts_tree_reg, columns=['RUL'])['RUL'].values, True)\n","svr = get_values_motors(pd.DataFrame(predicts_svr, columns=['RUL'])['RUL'].values, True)\n","rfors = get_values_motors(pd.DataFrame(predicts_forest_reg_with_randomized_search, columns=['RUL'])['RUL'].values, True)\n","\n","rt = pd.DataFrame({\n","    'y': y,\n","    'lin': lin,\n","    'tree': tree,\n","    'svr': svr,\n","    'rfors': rfors,\n","})\n","\n","rt['lin_error'] = np.sqrt((rt['y'] - rt['lin'])**2)\n","rt['tree_error'] = np.sqrt((rt['y'] - rt['tree'])**2)\n","rt['svr_error'] = np.sqrt((rt['y'] - rt['svr'])**2)\n","rt['rfors_error'] = np.sqrt((rt['y'] - rt['rfors'])**2)\n","\n","plt.figure(figsize=(10,6))\n","plt.scatter(rt['y'][23], rt['lin_error'][23], label='lin')\n","plt.scatter(rt['y'][23], rt['tree_error'][23], label='tree')\n","plt.scatter(rt['y'][23], rt['svr_error'][23], label='svr')\n","plt.scatter(rt['y'][23], rt['rfors_error'][23], label='rf')\n","plt.xlabel(\"RUL\")\n","plt.ylabel(\"Erro\")\n","plt.legend()\n","plt.grid(True)\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"OkJ_XASj42Pt","executionInfo":{"status":"ok","timestamp":1671504302748,"user_tz":180,"elapsed":923,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}},"outputId":"dbe4d383-ca28-4e79-a234-191c0ccca651"},"execution_count":40,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x432 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["####Linha 42 RUL 59"],"metadata":{"id":"_gBGgDrM5bxF"}},{"cell_type":"code","source":["y = get_values_motors(y_test['RUL'].values, True)\n","lin = get_values_motors(pd.DataFrame(predicts_lin_reg, columns=['RUL'])['RUL'].values, True)\n","tree = get_values_motors(pd.DataFrame(predicts_tree_reg, columns=['RUL'])['RUL'].values, True)\n","svr = get_values_motors(pd.DataFrame(predicts_svr, columns=['RUL'])['RUL'].values, True)\n","rfors = get_values_motors(pd.DataFrame(predicts_forest_reg_with_randomized_search, columns=['RUL'])['RUL'].values, True)\n","\n","rt = pd.DataFrame({\n","    'y': y,\n","    'lin': lin,\n","    'tree': tree,\n","    'svr': svr,\n","    'rfors': rfors,\n","})\n","\n","rt['lin_error'] = np.sqrt((rt['y'] - rt['lin'])**2)\n","rt['tree_error'] = np.sqrt((rt['y'] - rt['tree'])**2)\n","rt['svr_error'] = np.sqrt((rt['y'] - rt['svr'])**2)\n","rt['rfors_error'] = np.sqrt((rt['y'] - rt['rfors'])**2)\n","\n","plt.figure(figsize=(10,6))\n","plt.scatter(rt['y'][42], rt['lin_error'][42], label='lin')\n","plt.scatter(rt['y'][42], rt['tree_error'][42], label='tree')\n","plt.scatter(rt['y'][42], rt['svr_error'][42], label='svr')\n","plt.scatter(rt['y'][42], rt['rfors_error'][42], label='rf')\n","plt.xlabel(\"RUL\")\n","plt.ylabel(\"Erro\")\n","plt.legend()\n","plt.grid(True)\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"7s4_o6j56T6e","executionInfo":{"status":"ok","timestamp":1671504306363,"user_tz":180,"elapsed":1385,"user":{"displayName":"Andrews Vieira","userId":"03420053462409930544"}},"outputId":"5d55c574-6cdf-40e2-b4ea-666edee7e2db"},"execution_count":41,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x432 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"sgGb4qRYa5WW"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"toc_visible":true,"provenance":[],"authorship_tag":"ABX9TyPbAvc1wAFf03VhG14V5u9Z"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}